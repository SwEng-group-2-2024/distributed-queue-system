{"version":3,"file":"datetime.js","names":["_datetimen","_interopRequireDefault","require","_core","obj","__esModule","default","EPOCH_DATE","LocalDate","ofYearDay","NULL_LENGTH","Buffer","from","DATA_LENGTH","MIN_DATE","Date","MAX_DATE","DateTime","id","type","name","declaration","generateTypeInfo","DateTimeN","generateParameterLength","parameter","options","value","generateParameterData","date","useUTC","of","getUTCFullYear","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","days","until","ChronoUnit","DAYS","milliseconds","threeHundredthsOfSecond","seconds","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","getHours","getMinutes","getSeconds","getMilliseconds","Math","round","buffer","alloc","writeInt32LE","writeUInt32LE","validate","collation","parse","toUTCString","TypeError","isNaN","_default","exports","module"],"sources":["../../src/data-types/datetime.ts"],"sourcesContent":["import { type DataType } from '../data-type';\nimport DateTimeN from './datetimen';\nimport { ChronoUnit, LocalDate } from '@js-joda/core';\n\nconst EPOCH_DATE = LocalDate.ofYearDay(1900, 1);\nconst NULL_LENGTH = Buffer.from([0x00]);\nconst DATA_LENGTH = Buffer.from([0x08]);\n\nconst MIN_DATE = new Date('January 1, 1753');\nconst MAX_DATE = new Date('December 31, 9999');\n\nconst DateTime: DataType = {\n  id: 0x3D,\n  type: 'DATETIME',\n  name: 'DateTime',\n\n  declaration: function() {\n    return 'datetime';\n  },\n\n  generateTypeInfo() {\n    return Buffer.from([DateTimeN.id, 0x08]);\n  },\n\n  generateParameterLength(parameter, options) {\n    if (parameter.value == null) {\n      return NULL_LENGTH;\n    }\n\n    return DATA_LENGTH;\n  },\n\n  generateParameterData: function*(parameter, options) {\n    if (parameter.value == null) {\n      return;\n    }\n\n    const value = parameter.value as any; // Temporary solution. Remove 'any' later.\n\n    let date: LocalDate;\n    if (options.useUTC) {\n      date = LocalDate.of(value.getUTCFullYear(), value.getUTCMonth() + 1, value.getUTCDate());\n    } else {\n      date = LocalDate.of(value.getFullYear(), value.getMonth() + 1, value.getDate());\n    }\n\n    let days = EPOCH_DATE.until(date, ChronoUnit.DAYS);\n\n    let milliseconds, threeHundredthsOfSecond;\n    if (options.useUTC) {\n      let seconds = value.getUTCHours() * 60 * 60;\n      seconds += value.getUTCMinutes() * 60;\n      seconds += value.getUTCSeconds();\n      milliseconds = (seconds * 1000) + value.getUTCMilliseconds();\n    } else {\n      let seconds = value.getHours() * 60 * 60;\n      seconds += value.getMinutes() * 60;\n      seconds += value.getSeconds();\n      milliseconds = (seconds * 1000) + value.getMilliseconds();\n    }\n\n    threeHundredthsOfSecond = milliseconds / (3 + (1 / 3));\n    threeHundredthsOfSecond = Math.round(threeHundredthsOfSecond);\n\n    // 25920000 equals one day\n    if (threeHundredthsOfSecond === 25920000) {\n      days += 1;\n      threeHundredthsOfSecond = 0;\n    }\n\n    const buffer = Buffer.alloc(8);\n    buffer.writeInt32LE(days, 0);\n    buffer.writeUInt32LE(threeHundredthsOfSecond, 4);\n    yield buffer;\n  },\n\n  // TODO: type 'any' needs to be revisited.\n  validate: function(value: any, collation, options): null | number {\n    if (value == null) {\n      return null;\n    }\n\n    if (!(value instanceof Date)) {\n      value = new Date(Date.parse(value));\n    }\n\n    value = value as Date;\n\n    // TODO: check date range: January 1, 1753, through December 31, 9999\n    //    : time range: 00:00:00 through 23:59:59.997\n    if (options && options.useUTC) {\n      value = new Date(value.toUTCString());\n    }\n\n    if (value < MIN_DATE || value > MAX_DATE) {\n      throw new TypeError('Out of range.');\n    }\n\n    if (isNaN(value)) {\n      throw new TypeError('Invalid date.');\n    }\n\n    return value;\n  }\n};\n\nexport default DateTime;\nmodule.exports = DateTime;\n"],"mappings":"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"}